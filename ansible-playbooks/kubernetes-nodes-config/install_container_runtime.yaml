- name: install containerd
  hosts: all
  become: yes
  tasks:
    - name: download containerd binary
      ansible.builtin.get_url:
        url: "https://github.com/containerd/containerd/releases/download/v2.2.0-beta.0/containerd-2.2.0-beta.0-linux-amd64.tar.gz"
        dest: "/tmp"
        mode: '0755'

    - name: extract containerd binary
      ansible.builtin.unarchive:
        src: "/tmp/containerd-2.2.0-beta.0-linux-amd64.tar.gz"
        dest: "/usr/local"
        mode: '0755'
        remote_src: true

    - name: create containerd service directory
      ansible.builtin.file:
        path: /usr/local/lib/systemd/system
        state: directory

    - name: create containerd service
      ansible.builtin.copy:
        dest: /usr/local/lib/systemd/system/containerd.service
        content: |
            # Copyright The containerd Authors.
            #
            # Licensed under the Apache License, Version 2.0 (the "License");
            # you may not use this file except in compliance with the License.
            # You may obtain a copy of the License at
            #
            #     http://www.apache.org/licenses/LICENSE-2.0
            #
            # Unless required by applicable law or agreed to in writing, software
            # distributed under the License is distributed on an "AS IS" BASIS,
            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            # See the License for the specific language governing permissions and
            # limitations under the License.

            [Unit]
            Description=containerd container runtime
            Documentation=https://containerd.io
            After=network.target dbus.service

            [Service]
            ExecStartPre=-/sbin/modprobe overlay
            ExecStart=/usr/local/bin/containerd

            Type=notify
            Delegate=yes
            KillMode=process
            Restart=always
            RestartSec=5

            # Having non-zero Limit*s causes performance problems due to accounting overhead
            # in the kernel. We recommend using cgroups to do container-local accounting.
            LimitNPROC=infinity
            LimitCORE=infinity

            # Comment TasksMax if your systemd version does not supports it.
            # Only systemd 226 and above support this version.
            TasksMax=infinity
            OOMScoreAdjust=-999

            [Install]
            WantedBy=multi-user.target
        mode: '0644'

    - name: enable and start containerd service (reload if needed)
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started
        daemon_reload: yes   # reloads systemd only if unit files changed

    - name: install runc
      ansible.builtin.get_url:
        url: "https://github.com/opencontainers/runc/releases/download/v1.3.1/runc.amd64"
        dest: "/usr/local/sbin/runc"
        mode: '0755'

    - name: install cni plugins
      ansible.builtin.get_url:
        url: "https://github.com/containernetworking/plugins/releases/download/v1.8.0/cni-plugins-linux-amd64-v1.8.0.tgz"
        dest: "/tmp"

    - name: create cni plugins directory
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: extract cni plugins
      ansible.builtin.unarchive:
        src: "/tmp/cni-plugins-linux-amd64-v1.8.0.tgz"
        dest: "/opt/cni/bin"
        remote_src: true
        mode: '0755'

    - name: Enable IP forwarding immediately
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Ensure IP forwarding persists across reboots
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.ip_forward'
        line: 'net.ipv4.ip_forward = 1'
        state: present

    - name: create containerd config directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: create containerd config file
      ansible.builtin.shell: |
        containerd config default > /etc/containerd/config.toml
      register: command_output

    - name: "configuring the systemd cgroup driver"
      blockinfile:
        dest: "/etc/containerd/config.toml"
        block: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
        insertafter: "          io_type = ''"

